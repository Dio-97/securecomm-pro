name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: false
        default: 'latest'

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Dependencies
      run: npm ci
      
    - name: Build Web Application
      run: |
        npm run build
        
    - name: Sync Capacitor
      run: |
        npx cap sync android
        
    - name: Generate Debug APK
      working-directory: ./android
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug
        
    - name: Generate Release APK
      working-directory: ./android
      run: |
        ./gradlew assembleRelease
        
    - name: Sign APK (if keystore available)
      working-directory: ./android
      run: |
        if [ -f "app/keystore.jks" ]; then
          ./gradlew bundleRelease
        else
          echo "No keystore found, using unsigned APK"
        fi
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: securecomm-debug-${{ github.sha }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: securecomm-release-${{ github.sha }}
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk
        retention-days: 90
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        body: |
          🚀 **SecureComm Pro ${{ github.ref_name }}**
          
          ✅ **Funzionalità Incluse:**
          - 🔐 Crittografia end-to-end Signal Protocol
          - 📱 QR Code per verifiche identità
          - 🛡️ VPN WireGuard con killswitch
          - 🔒 DNS over HTTPS protezione
          - 📁 Condivisione file crittografati
          - 🎙️ Walkie-talkie sicuro
          - 👁️ Admin "God Mode"
          
          📱 **Download:**
          - `app-debug.apk` - Versione debug (per test)
          - `app-release-unsigned.apk` - Versione release
          
          📋 **Installazione:**
          1. Scarica APK dal dispositivo Android
          2. Abilita "Origini sconosciute" nelle impostazioni
          3. Installa APK e avvia SecureComm Pro
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}